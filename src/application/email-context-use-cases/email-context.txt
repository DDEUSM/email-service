import { describe, expect, test } from "@jest/globals"
import { contextUseCases } from "../../init-connections"
import { ContextDtoIntern } from "../../infrastructure/dtos/context-dto"
import { Context } from "../../domain/entities/context"

describe("test email context", () => 
{
    const contextDtoIntern = new ContextDtoIntern (
        '303a391e-d532-4eed-a0e2-3309c97f4d21',
        '307a391e-d532-4eed-a0e2-3309c97f4111',
        "david@live.com",
        "context test"
    )

    const emailContext = Context.createContext(contextDtoIntern)

    test("save email context | get it", async () => 
    {
        await contextUseCases.createEmailContext(emailContext)
        let result = await contextUseCases.getEmailContextById(emailContext.id) 
        expect(result.id).toBe(emailContext.id)
        console.log(emailContext.id)
    })
    

    test("send email with email context | read email body", async () => 
    {
        const recipientData = {
            firstName: "David de Deus",
            email: "daviddeusm@gg.com"
        }
        const result = await contextUseCases.callEmailContext(emailContext.id, recipientData)
        console.log(result)
    })

    test("delete him | verify if it has deleted", async () => 
    {
        await contextUseCases.deleteEmailContext(emailContext.id);
        let result2 = await contextUseCases.getEmailContextById(emailContext.id)
        .catch(error => { return console.log(error)} ) 
    })
})